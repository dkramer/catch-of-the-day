{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","desc","image","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","console","log","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","addToOrder","disabled","App","Date","now","sampleFishes","params","match","orders","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.6de04ba6.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","//must always improt react for each react components \r\n//webpack will dedupe so it is only included once in final build\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getFunName} from '../helpers';\r\n\r\n/**\r\nAll react apps are a collection of COMPONENTS\r\nTo create a component syntax is:\r\n    class <className> extends React.Component {...}\r\n**/\r\nclass StorePicker extends React.Component { \r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    };\r\n\r\n    /**\r\n    If a method needs to reference 'this' key word\r\n    create a property and set it to an arrow function \r\n    and the property will be bound to the instance of 'this' object\r\n    **/\r\n    goToStore = event => {\r\n        //stop form submission\r\n        event.preventDefault();\r\n        //get text from input\r\n        const storeName = this.myInput.current.value;\r\n        //change the page to the store inputted\r\n        this.props.history.push(`/store/${storeName}`);\r\n    };\r\n\r\n    /**\r\n    render can only return one PARENT/ADJACENT element\r\n    if you need to return multiple wrap in in a <React.Fragment> tag\r\n    **/\r\n    render() {\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                {/*the {} tags tells jsx we want to do JS*/}\r\n                <h2>Please Enter a Store</h2>\r\n                <input \r\n                    type=\"text\"\r\n                    ref={this.myInput}\r\n                    required\r\n                    placeholder=\"Store Name\"\r\n                    defaultValue={getFunName()} />\r\n                <button type=\"submit\">Visit Store -></button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n/**\r\nIf a react component only has the render function it is more concise to\r\nto make the component a \"stateless functional component\"\r\nto do that drop the class <> extends React.Component lines and\r\nmake a const variable that has a function that returns the jsx immidiatly\r\n**/\r\nconst Header = props => (\r\n    <header className=\"top\">\r\n        Catch\r\n        <span className=\"ofThe\">\r\n            <span className=\"of\"> of </span>\r\n            <span className=\"the\"> the </span>\r\n        </span>\r\n        Day\r\n        <h3 className=\"tagline\">\r\n        {/*to access properties do the below {this.props.<propName>}*/}\r\n        <span>{props.tagline}</span>\r\n    </h3>\r\n    </header>\r\n);\r\n\r\n/**\r\nvar Header = function(props) {\r\n    return (\r\n        <header className=\"top\">\r\n            Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">of</span>\r\n                <span className=\"the\">the</span>\r\n            </span>\r\n            Day\r\n            <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n        </header>\r\n    );\r\n};\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"top\">\r\n                Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">of</span>\r\n                    <span className=\"the\">the</span>\r\n                </span>\r\n                Day\r\n                <h3 className=\"tagline\">\r\n                <span>{this.props.tagline}</span>\r\n            </h3>\r\n            </header>\r\n        );\r\n    };\r\n};\r\n**/\r\n\r\n\r\n//with PropTypes module you can specify what paramaters are required\r\n//and even their types\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {formatPrice} from '../helpers';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeOrder: PropTypes.func\r\n    };\r\n\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames:\"count\",\r\n            key:key,\r\n            timeout:{enter: 250, exit: 250}\r\n        };\r\n        //if there are no fish then return null so nothing is rendered\r\n        if (!fish) {\r\n            return;\r\n        } else if (isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        <span>\r\n                            <TransitionGroup component=\"span\" className=\"count\">\r\n                                <CSSTransition classNames=\"count\" key={count} timeout={{enter: 250, exit: 250}}>\r\n                                    <span>{count}</span>\r\n                                 </CSSTransition>\r\n                            </TransitionGroup>\r\n                                lbs of {fish.name} {formatPrice(count * fish.price)}\r\n                                <button onClick={() => this.props.removeOrder(key)}>Remove Fish</button>\r\n                        </span>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        } else {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        //loops over properties or array\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    };\r\n\r\n    createFish = (event) => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            nameRef : this.nameRef.current.value,\r\n            priceRef : parseFloat(this.priceRef.current.value),\r\n            statusRef : this.statusRef.current.value,\r\n            descRef : this.descRef.current.value,\r\n            imageRef : this.imageRef.current.value\r\n\r\n        };\r\n        this.props.addFish(fish);\r\n        event.currentTarget.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef}  type=\"text\" placeholder=\"name\" />\r\n                <input name=\"price\" ref={this.priceRef}  type=\"text\" placeholder=\"price\" />\r\n                <select name=\"status\" ref={this.statusRef} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef}  placeholder=\"desc\" ></textarea>\r\n                <input name=\"image\" ref={this.imageRef}  type=\"text\" placeholder=\"image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        //event.currentTarget.value will get the VALUE of the new input\r\n        //[event.currentTarget.name] will get the NAME of the changed input\r\n        //take copy of current fish\r\n        const updatedFish= {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input name=\"name\" onChange={this.handleChange} value={this.props.fish.name} type=\"text\" />\r\n                <input name=\"price\" onChange={this.handleChange} value={this.props.fish.price} type=\"text\" />\r\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}></textarea>\r\n                <input name=\"image\" onChange={this.handleChange} value={this.props.fish.image} type=\"text\" />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your stor's inventory.</p>\r\n        <button \r\n            className=\"facebook\" \r\n            onClick={() => props.authenticate('Facebook')}>\r\n            Log In With Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDscurlS_tRa-wkNo7CGPkzv9tAvCwd18w\",\r\n    authDomain: \"catch-of-the-day-dkramer.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-dkramer.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n//this is a named export\r\nexport { firebaseApp };\r\n\r\n//this is a default export\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm'\r\nimport Login from './Login'\r\nimport base, {firebaseApp} from '../base'\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        deleteFish: PropTypes.func,\r\n        updateFish: PropTypes.func,\r\n        addFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        //reach out to firebase to see if the user is logged in\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({user});\r\n            }\r\n        });\r\n    };\r\n\r\n    authHandler = async(authData) => {\r\n        //look up current store (from url)\r\n        const store = await base.fetch(this.props.storeId, {context:this});\r\n        //if no on eowns it\r\n        if (!store.owner) {\r\n            //THEN set ourselves as the owner\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n\r\n        //set the user uid from firebase authentication\r\n        //set the owner from the DB or the auth\r\n        this.setState({\r\n            uid:authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    };\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('logging out');\r\n        await firebase.auth().signOut();\r\n        this.setState({uid: null});\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Log out!</button>\r\n        //check if they are logged in (have user id)\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate}/>;\r\n        }\r\n\r\n        //check if they are the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                Sorry you are not the owner.\r\n                {logout}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => \r\n                    <EditFishForm\r\n                        key={key}\r\n                        index={key}\r\n                        fish={this.props.fishes[key]}\r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish}/>)}\r\n                <AddFishForm addFish={this.props.addFish}/>\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {formatPrice} from '../helpers';\r\n\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    };\r\n    render() {\r\n        /*\r\n        const image = this.props.details.image;\r\n        const name = this.props.details.name;\r\n        */\r\n        //destructure the above with ES6\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button onClick={() => this.props.addToOrder(this.props.index)}\r\n                    disabled={!isAvailable}>{isAvailable ? 'Add To Order' : 'Sold Out'}</button>\r\n                }\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    };\r\n\r\n    //fires when component mounts\r\n    componentDidMount() {\r\n        const {params} = this.props.match;\r\n        const orders = localStorage.getItem(params.storeId);\r\n        if (orders) {\r\n            //orders were saved a sa string so unparse the stringified object\r\n            this.setState({order: JSON.parse(orders)});\r\n        }\r\n\r\n\r\n        //two params\r\n        //name?\r\n        //object of options, the context and the state you want to sync\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    };\r\n\r\n    //fires when component will unmount\r\n    //used here to cleanup connection to firebase\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    };\r\n\r\n    //fires when a component (view) updates\r\n    //NOT called on initial render\r\n    componentDidUpdate() {\r\n        //takes in a key value pair\r\n        //saves all values as STRINGS (thus stringify)\r\n        localStorage.setItem(this.props.match.params.storeId, \r\n            JSON.stringify(this.state.order));\r\n    };\r\n\r\n    addFish = fish => {\r\n        //takes a COPY of the fishes from state\r\n        const fishes = {...this.state.fishes};\r\n\r\n        //add our new fish to fishes with unique key (based on epoch)\r\n        fishes[`fish${Date.now()}`] = fish;\r\n\r\n        // put our fishes back in STATE\r\n        this.setState({fishes: fishes});\r\n    };\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes: sampleFishes});\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        const order = {...this.state.order};\r\n\r\n        if (order[key]) {\r\n            order[key] = ++order[key];\r\n        } else {\r\n            order[key] = 1;\r\n        }\r\n\r\n        this.setState({order: order});\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //takes a COPY of the fishes from state\r\n        const fishes = {...this.state.fishes};\r\n        //update the fish\r\n        fishes[key] = updatedFish\r\n        // put our fishes back in STATE\r\n        this.setState({fishes: fishes});\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        //get copy of fish\r\n        const fishes = {...this.state.fishes};\r\n        //set the fish (key) to null to \"delete\" it\r\n        //setting to null is neccisary for firebase to delete it\r\n        fishes[key] = null;\r\n        //update the state\r\n        this.setState({fishes: fishes});\r\n    };\r\n\r\n    removeOrder = (key) => {\r\n        console.log(key);\r\n        //get copy of order\r\n        const order = {...this.state.order};\r\n        //this is in localStorage so all we need to do is call delete\r\n        delete order[key];\r\n        //update the state\r\n        this.setState({order: order});\r\n    };\r\n\r\n    /**\r\n    render can only return one PARENT/ADJACENT element\r\n    if you need to return multiple wrap in in a <React.Fragment> tag\r\n    **/\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"taglineee\"/>\r\n                    <ul>\r\n                        {Object.keys(this.state.fishes).map(key => \r\n                            <Fish key={key} \r\n                                details={this.state.fishes[key]}\r\n                                addToOrder={this.addToOrder}\r\n                                index={key}/>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            {/*could do everything in state to order with {...this..state}*/}\r\n                <Order \r\n                    fishes={this.state.fishes}\r\n                    order={this.state.order}\r\n                    removeOrder={this.removeOrder}/>\r\n                <Inventory \r\n                    addFish={this.addFish} \r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    storeId={this.props.match.params.storeId}/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\r\n\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>{/*like a java switch it will execute the first rule it matches and it will break*/}\r\n            {/*matches url with / (base of app) */}\r\n            <Route exact path=\"/\" component={StorePicker}></Route>\r\n            {/*matches url with /store/ANYTHING> then passes on the ANYTHING in the url to the component*/}\r\n            <Route path=\"/store/:storeId\" component={App}></Route>\r\n            {/*because it does not have a path what ever makes it to this rule will trigger the component*/}\r\n            <Route component={NotFound}></Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","//imports the entire react package\r\nimport React from 'react'; //note 'react' is lower case\r\n//with {} notation it imports only the METHODS we tell it to from the PACKAGE\r\nimport { render } from 'react-dom'; //import only render method from react-dom package\r\n//import StorePicker from './components/StorePicker'; //imports via relative path, can leave off .js\r\n//import App from './components/App';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\n\r\n/**\r\n        render method has two params\r\n        the HTML to render\r\n        and the element to add the HTML too\r\n    **/\r\n//render(<StorePicker/>, document.querySelector('#main'));\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}